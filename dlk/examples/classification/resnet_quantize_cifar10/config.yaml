BATCH_SIZE: 1
CLASSES:
- airplane
- automobile
- bird
- cat
- deer
- dog
- frog
- horse
- ship
- truck
DATASET:
  AUGMENTOR: !!python/object:lmnet.data_processor.Sequence
    processors:
    - !!python/object:lmnet.data_augmentor.Pad
      bottom: 2
      fill: 0
      left: 2
      right: 2
      top: 2
    - !!python/object:lmnet.data_augmentor.Crop
      height: 32
      is_resize: false
      width: 32
    - !!python/object:lmnet.data_augmentor.FlipLeftRight
      is_bounding_box: false
      probability: 0.5
  BATCH_SIZE: 1
  DATA_FORMAT: NHWC
  PRE_PROCESSOR: !!python/object:lmnet.data_processor.Sequence
    processors:
    - !!python/object:lmnet.pre_processor.Resize
      size:
      - 32
      - 32
    - !!python/object:lmnet.pre_processor.PerImageStandardization {}
DATASET_CLASS: !!python/name:lmnet.datasets.cifar10.Cifar10 ''
DATA_FORMAT: NHWC
IMAGE_SIZE:
- 32
- 32
IS_DEBUG: false
IS_DISTRIBUTION: false
IS_PRETRAIN: false
MAX_STEPS: 100000
NETWORK:
  ACTIVATION_QUANTIZER: !!python/name:lmnet.quantizations.linear.linear_mid_tread_half_quantizer ''
  ACTIVATION_QUANTIZER_KWARGS:
    bit: 2
    max_value: 2
  BATCH_SIZE: 1
  DATA_FORMAT: NHWC
  IMAGE_SIZE:
  - 32
  - 32
  LEARNING_RATE_FUNC: !!python/name:tensorflow.python.training.learning_rate_decay.piecewise_constant ''
  LEARNING_RATE_KWARGS:
    boundaries:
    - 40000
    - 60000
    - 80000
    values:
    - 0.1
    - 0.01
    - 0.001
    - 0.0001
  OPTIMIZER_CLASS: !!python/name:tensorflow.python.training.momentum.MomentumOptimizer ''
  OPTIMIZER_KWARGS:
    momentum: 0.9
  WEIGHT_QUANTIZER: !!python/name:lmnet.quantizations.binary.binary_mean_scaling_quantizer ''
  WEIGHT_QUANTIZER_KWARGS: {}
NETWORK_CLASS: !!python/name:lmnet.networks.classification.lm_resnet.LmResnetQuantize ''
POST_PROCESSOR: null
PRETRAIN_DIR: ''
PRETRAIN_FILE: ''
PRETRAIN_VARS: []
PRE_PROCESSOR: !!python/object:lmnet.data_processor.Sequence
  processors:
  - !!python/object:lmnet.pre_processor.Resize
    size:
    - 32
    - 32
  - !!python/object:lmnet.pre_processor.PerImageStandardization {}
SAVE_STEPS: 2500
SUMMARISE_STEPS: 2500
TASK: !!python/object/apply:lmnet.common.Tasks
- IMAGE.CLASSIFICATION
TEST_STEPS: 2500
USE_RECOVERY: true
